/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Execution,
  ExecutionInterface,
} from "../../../../contracts/Prediction/execution.sol/Execution";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "ExecutionSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "checkSignature",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "chainid",
        type: "uint256",
      },
    ],
    name: "encodeTransactionData",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signatures",
        type: "bytes",
      },
    ],
    name: "execTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001f61002460201b60201c565b6100e1565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3565b611200806100f06000396000f3fe60806040526004361061008a5760003560e01c8063ce606ee011610059578063ce606ee014610140578063d01aa3181461016b578063d087d2881461019b578063d12c1e90146101c6578063f2fde38b1461020357610091565b8063715018a614610096578063831c9e2e146100ad5780638f32d59b146100ea578063affed0e01461011557610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100ab61022c565b005b3480156100b957600080fd5b506100d460048036038101906100cf9190610a33565b610331565b6040516100e19190610ad0565b60405180910390f35b3480156100f657600080fd5b506100ff610480565b60405161010c9190610b06565b60405180910390f35b34801561012157600080fd5b5061012a6104d7565b6040516101379190610b3a565b60405180910390f35b34801561014c57600080fd5b506101556104dd565b6040516101629190610ad0565b60405180910390f35b61018560048036038101906101809190610bad565b610506565b6040516101929190610b06565b60405180910390f35b3480156101a757600080fd5b506101b06106ad565b6040516101bd9190610b3a565b60405180910390f35b3480156101d257600080fd5b506101ed60048036038101906101e89190610c4c565b6106b7565b6040516101fa9190610cde565b60405180910390f35b34801561020f57600080fd5b5061022a60048036038101906102259190610cf9565b610700565b005b610234610480565b610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026a90610d83565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006041825114610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610def565b60405180910390fd5b600080600061038585610753565b8093508194508295505050506001866040516020016103a49190610e87565b60405160208183030381529060405280519060200120848484604051600081526020016040526040516103da9493929190610ec9565b6020604051602081039080840390855afa1580156103fc573d6000803e3d6000fd5b505050602060405103519350600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e90610f5a565b60405180910390fd5b50505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610510610480565b61054f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054690610d83565b60405180910390fd5b600061055d868686466106b7565b90506001600081548092919061057290610fa9565b91905055506105818184610331565b508573ffffffffffffffffffffffffffffffffffffffff1685856040516105a89190611062565b60006040518083038185875af1925050503d80600081146105e5576040519150601f19603f3d011682016040523d82523d6000602084013e6105ea565b606091505b5050809250508115610632577fdc29884a71d2bb98d3c53dc09718be05c7bfd142b7773a5c5cf2517629290ac0816040516106259190610cde565b60405180910390a16106a4565b7fdbe42d02a4e07d7eeff2874efe172540c93b297d206f6d691c9782a257323e32816040516106619190610cde565b60405180910390a16040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b906110c5565b60405180910390fd5b50949350505050565b6000600154905090565b60008085858580519060200120600154866040516020016106dc9594939291906110e5565b60405160208183030381529060405280519060200120905080915050949350505050565b610708610480565b610747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073e90610d83565b60405180910390fd5b61075081610777565b50565b60008060006020840151915060408401519050606084015160001a92509193909250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd906111aa565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6108ca816108b7565b81146108d557600080fd5b50565b6000813590506108e7816108c1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610940826108f7565b810181811067ffffffffffffffff8211171561095f5761095e610908565b5b80604052505050565b60006109726108a3565b905061097e8282610937565b919050565b600067ffffffffffffffff82111561099e5761099d610908565b5b6109a7826108f7565b9050602081019050919050565b82818337600083830152505050565b60006109d66109d184610983565b610968565b9050828152602081018484840111156109f2576109f16108f2565b5b6109fd8482856109b4565b509392505050565b600082601f830112610a1a57610a196108ed565b5b8135610a2a8482602086016109c3565b91505092915050565b60008060408385031215610a4a57610a496108ad565b5b6000610a58858286016108d8565b925050602083013567ffffffffffffffff811115610a7957610a786108b2565b5b610a8585828601610a05565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aba82610a8f565b9050919050565b610aca81610aaf565b82525050565b6000602082019050610ae56000830184610ac1565b92915050565b60008115159050919050565b610b0081610aeb565b82525050565b6000602082019050610b1b6000830184610af7565b92915050565b6000819050919050565b610b3481610b21565b82525050565b6000602082019050610b4f6000830184610b2b565b92915050565b610b5e81610aaf565b8114610b6957600080fd5b50565b600081359050610b7b81610b55565b92915050565b610b8a81610b21565b8114610b9557600080fd5b50565b600081359050610ba781610b81565b92915050565b60008060008060808587031215610bc757610bc66108ad565b5b6000610bd587828801610b6c565b9450506020610be687828801610b98565b935050604085013567ffffffffffffffff811115610c0757610c066108b2565b5b610c1387828801610a05565b925050606085013567ffffffffffffffff811115610c3457610c336108b2565b5b610c4087828801610a05565b91505092959194509250565b60008060008060808587031215610c6657610c656108ad565b5b6000610c7487828801610b6c565b9450506020610c8587828801610b98565b935050604085013567ffffffffffffffff811115610ca657610ca56108b2565b5b610cb287828801610a05565b9250506060610cc387828801610b98565b91505092959194509250565b610cd8816108b7565b82525050565b6000602082019050610cf36000830184610ccf565b92915050565b600060208284031215610d0f57610d0e6108ad565b5b6000610d1d84828501610b6c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d6d602083610d26565b9150610d7882610d37565b602082019050919050565b60006020820190508181036000830152610d9c81610d60565b9050919050565b7f5754463530303600000000000000000000000000000000000000000000000000600082015250565b6000610dd9600783610d26565b9150610de482610da3565b602082019050919050565b60006020820190508181036000830152610e0881610dcc565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610e50601c83610e0f565b9150610e5b82610e1a565b601c82019050919050565b6000819050919050565b610e81610e7c826108b7565b610e66565b82525050565b6000610e9282610e43565b9150610e9e8284610e70565b60208201915081905092915050565b600060ff82169050919050565b610ec381610ead565b82525050565b6000608082019050610ede6000830187610ccf565b610eeb6020830186610eba565b610ef86040830185610ccf565b610f056060830184610ccf565b95945050505050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000610f44601183610d26565b9150610f4f82610f0e565b602082019050919050565b60006020820190508181036000830152610f7381610f37565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fb482610b21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fe657610fe5610f7a565b5b600182019050919050565b600081519050919050565b600081905092915050565b60005b8381101561102557808201518184015260208101905061100a565b60008484015250505050565b600061103c82610ff1565b6110468185610ffc565b9350611056818560208601611007565b80840191505092915050565b600061106e8284611031565b915081905092915050565b7f6661696c00000000000000000000000000000000000000000000000000000000600082015250565b60006110af600483610d26565b91506110ba82611079565b602082019050919050565b600060208201905081810360008301526110de816110a2565b9050919050565b600060a0820190506110fa6000830188610ac1565b6111076020830187610b2b565b6111146040830186610ccf565b6111216060830185610b2b565b61112e6080830184610b2b565b9695505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611194602683610d26565b915061119f82611138565b604082019050919050565b600060208201905081810360008301526111c381611187565b905091905056fea2646970667358221220ca6eb2744ea55144c17fd5dcfc915633dff5ea9d7d96c68252d02f10c17e6f3e64736f6c63430008180033";

type ExecutionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExecutionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Execution__factory extends ContractFactory {
  constructor(...args: ExecutionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Execution & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Execution__factory {
    return super.connect(runner) as Execution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutionInterface {
    return new Interface(_abi) as ExecutionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Execution {
    return new Contract(address, _abi, runner) as unknown as Execution;
  }
}
