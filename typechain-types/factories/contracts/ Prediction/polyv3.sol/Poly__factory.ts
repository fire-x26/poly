/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Poly,
  PolyInterface,
} from "../../../../contracts/ Prediction/polyv3.sol/Poly";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "UnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "conditionId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outcomeSlotCount",
        type: "uint256",
      },
    ],
    name: "ConditionPreparation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "KYCAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "conditonId",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_addrs",
        type: "address[]",
      },
    ],
    name: "addKYCAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "casinoChips",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "conditionId",
        type: "string",
      },
    ],
    name: "getOrderiInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toWin",
            type: "uint256",
          },
        ],
        internalType: "struct Poly.conditionInfo[]",
        name: "details",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "payoutNumerators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "payoutPosition",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "conditionId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "placeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "conditionId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "outcomeSlotCount",
        type: "uint256",
      },
    ],
    name: "prepareCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "conditionId",
        type: "string",
      },
    ],
    name: "redeemPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "conditionId",
        type: "string",
      },
      {
        internalType: "address",
        name: "position",
        type: "address",
      },
    ],
    name: "reportPayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "totalAmountBet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506124ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806388b922d511610097578063c0c53b8b11610066578063c0c53b8b146102ae578063e8f4afd6146102ca578063f2fde38b146102e6578063f858281b1461030257610100565b806388b922d5146102135780638da5cb5b1461022f5780638dcd95031461024d578063bac633811461027d57610100565b80636e10d0e8116100d35780636e10d0e8146101a1578063715018a6146101d157806374ab60f5146101db57806383d7cd95146101f757610100565b8063017e7e58146101055780631062d861146101235780632762b60214610153578063621bbef714610183575b600080fd5b61010d61031e565b60405161011a919061168f565b60405180910390f35b61013d6004803603810190610138919061183a565b610344565b60405161014a91906118a5565b60405180910390f35b61016d600480360381019061016891906118c0565b61038b565b60405161017a91906118a5565b60405180910390f35b61018b6103b9565b604051610198919061168f565b60405180910390f35b6101bb60048036038101906101b6919061183a565b6103df565b6040516101c8919061168f565b60405180910390f35b6101d9610443565b005b6101f560048036038101906101f091906119bf565b610457565b005b610211600480360381019061020c9190611a40565b6104c7565b005b61022d60048036038101906102289190611aa0565b610686565b005b610237610969565b604051610244919061168f565b60405180910390f35b610267600480360381019061026291906118c0565b6109a1565b604051610274919061168f565b60405180910390f35b61029760048036038101906102929190611b14565b6109ea565b6040516102a5929190611c4e565b60405180910390f35b6102c860048036038101906102c39190611caa565b610bb5565b005b6102e460048036038101906102df9190611cfd565b610e57565b005b61030060048036038101906102fb9190611d5d565b610f29565b005b61031c60048036038101906103179190611b14565b610faf565b005b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600282805160208101820180518482526020830160208501208183528095505050505050818154811061037657600080fd5b90600052602060002001600091509150505481565b6004818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600382805160208101820180518482526020830160208501208183528095505050505050818154811061041157600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61044b61127a565b6104556000611301565b565b61045f61127a565b60028484604051610471929190611dba565b908152602001604051809103902080549050828290501461049157600080fd5b8181600386866040516104a5929190611dba565b908152602001604051809103902091906104c092919061152a565b5050505050565b61010081111561050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390611e30565b60405180910390fd5b6001811161054f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054690611ec2565b60405180910390fd5b600060028484604051610563929190611dba565b908152602001604051809103902080549050146105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90611f2e565b60405180910390fd5b8067ffffffffffffffff8111156105cf576105ce6116d9565b5b6040519080825280602002602001820160405280156105fd5781602001602082028036833780820191505090505b5060028484604051610610929190611dba565b908152602001604051809103902090805190602001906106319291906115ca565b508282604051610642929190611dba565b60405180910390207fa32de6189e144edec4436e11cc70ceffd6475771373eb877b6368f066bde691e8260405161067991906118a5565b60405180910390a2505050565b60038484604051610698929190611dba565b908152602001604051809103902082815481106106b8576106b7611f4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071a57600080fd5b80600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610776919061168f565b602060405180830381865afa158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190611f92565b10156107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef9061200b565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016108579392919061202b565b6020604051808303816000875af1158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a919061209a565b6108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d090612113565b60405180910390fd5b80600485856040516108ec929190611dba565b908152602001604051809103902060008282546109099190612162565b925050819055508060028585604051610923929190611dba565b9081526020016040518091039020838154811061094357610942611f4e565b5b90600052602060002001600082825461095c9190612162565b9250508190555050505050565b6000806109746113d8565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6005818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606060048484604051610a00929190611dba565b9081526020016040518091039020549150600060028585604051610a25929190611dba565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610a7d57602002820191906000526020600020905b815481526020019060010190808311610a69575b50505050509050805167ffffffffffffffff811115610a9f57610a9e6116d9565b5b604051908082528060200260200182016040528015610ad857816020015b610ac5611617565b815260200190600190039081610abd5790505b50915060005b8151811015610bac576000828281518110610afc57610afb611f4e565b5b602002602001015114610b9f57818181518110610b1c57610b1b611f4e565b5b6020026020010151838281518110610b3757610b36611f4e565b5b60200260200101516000018181525050818181518110610b5a57610b59611f4e565b5b6020026020010151620f424085610b719190612196565b610b7b9190612207565b838281518110610b8e57610b8d611f4e565b5b602002602001015160200181815250505b8080600101915050610ade565b50509250929050565b6000610bbf611400565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610c0d5750825b9050600060018367ffffffffffffffff16148015610c42575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610c50575080155b15610c87576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610cd75760018560000160086101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d90612284565b60405180910390fd5b610d6f88611428565b86600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610e4d5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610e4491906122fd565b60405180910390a15b5050505050505050565b610e5f61127a565b600060028484604051610e73929190611dba565b90815260200160405180910390208054905003610ec5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebc90612364565b60405180910390fd5b8060058484604051610ed8929190611dba565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b610f3161127a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fa35760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f9a919061168f565b60405180910390fd5b610fac81611301565b50565b60058282604051610fc1929190611dba565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461102757600080fd5b6000606460056004858560405161103f929190611dba565b9081526020016040518091039020546110589190612196565b6110629190612207565b905060008160048585604051611079929190611dba565b9081526020016040518091039020546110929190612384565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016111139291906123b8565b6020604051808303816000875af1158015611132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611156919061209a565b611195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118c9061242d565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111f29291906123b8565b6020604051808303816000875af1158015611211573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611235919061209a565b611274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126b90612499565b60405180910390fd5b50505050565b61128261143c565b73ffffffffffffffffffffffffffffffffffffffff166112a0610969565b73ffffffffffffffffffffffffffffffffffffffff16146112ff576112c361143c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112f6919061168f565b60405180910390fd5b565b600061130b6113d8565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611430611444565b61143981611484565b50565b600033905090565b61144c61150a565b611482576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61148c611444565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114fe5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114f5919061168f565b60405180910390fd5b61150781611301565b50565b6000611514611400565b60000160089054906101000a900460ff16905090565b8280548282559060005260206000209081019282156115b9579160200282015b828111156115b857823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061154a565b5b5090506115c69190611631565b5090565b828054828255906000526020600020908101928215611606579160200282015b828111156116055782518255916020019190600101906115ea565b5b5090506116139190611631565b5090565b604051806040016040528060008152602001600081525090565b5b8082111561164a576000816000905550600101611632565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116798261164e565b9050919050565b6116898161166e565b82525050565b60006020820190506116a46000830184611680565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611711826116c8565b810181811067ffffffffffffffff821117156117305761172f6116d9565b5b80604052505050565b60006117436116aa565b905061174f8282611708565b919050565b600067ffffffffffffffff82111561176f5761176e6116d9565b5b611778826116c8565b9050602081019050919050565b82818337600083830152505050565b60006117a76117a284611754565b611739565b9050828152602081018484840111156117c3576117c26116c3565b5b6117ce848285611785565b509392505050565b600082601f8301126117eb576117ea6116be565b5b81356117fb848260208601611794565b91505092915050565b6000819050919050565b61181781611804565b811461182257600080fd5b50565b6000813590506118348161180e565b92915050565b60008060408385031215611851576118506116b4565b5b600083013567ffffffffffffffff81111561186f5761186e6116b9565b5b61187b858286016117d6565b925050602061188c85828601611825565b9150509250929050565b61189f81611804565b82525050565b60006020820190506118ba6000830184611896565b92915050565b6000602082840312156118d6576118d56116b4565b5b600082013567ffffffffffffffff8111156118f4576118f36116b9565b5b611900848285016117d6565b91505092915050565b600080fd5b600080fd5b60008083601f840112611929576119286116be565b5b8235905067ffffffffffffffff81111561194657611945611909565b5b6020830191508360018202830111156119625761196161190e565b5b9250929050565b60008083601f84011261197f5761197e6116be565b5b8235905067ffffffffffffffff81111561199c5761199b611909565b5b6020830191508360208202830111156119b8576119b761190e565b5b9250929050565b600080600080604085870312156119d9576119d86116b4565b5b600085013567ffffffffffffffff8111156119f7576119f66116b9565b5b611a0387828801611913565b9450945050602085013567ffffffffffffffff811115611a2657611a256116b9565b5b611a3287828801611969565b925092505092959194509250565b600080600060408486031215611a5957611a586116b4565b5b600084013567ffffffffffffffff811115611a7757611a766116b9565b5b611a8386828701611913565b93509350506020611a9686828701611825565b9150509250925092565b60008060008060608587031215611aba57611ab96116b4565b5b600085013567ffffffffffffffff811115611ad857611ad76116b9565b5b611ae487828801611913565b94509450506020611af787828801611825565b9250506040611b0887828801611825565b91505092959194509250565b60008060208385031215611b2b57611b2a6116b4565b5b600083013567ffffffffffffffff811115611b4957611b486116b9565b5b611b5585828601611913565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b9681611804565b82525050565b604082016000820151611bb26000850182611b8d565b506020820151611bc56020850182611b8d565b50505050565b6000611bd78383611b9c565b60408301905092915050565b6000602082019050919050565b6000611bfb82611b61565b611c058185611b6c565b9350611c1083611b7d565b8060005b83811015611c41578151611c288882611bcb565b9750611c3383611be3565b925050600181019050611c14565b5085935050505092915050565b6000604082019050611c636000830185611896565b8181036020830152611c758184611bf0565b90509392505050565b611c878161166e565b8114611c9257600080fd5b50565b600081359050611ca481611c7e565b92915050565b600080600060608486031215611cc357611cc26116b4565b5b6000611cd186828701611c95565b9350506020611ce286828701611c95565b9250506040611cf386828701611c95565b9150509250925092565b600080600060408486031215611d1657611d156116b4565b5b600084013567ffffffffffffffff811115611d3457611d336116b9565b5b611d4086828701611913565b93509350506020611d5386828701611c95565b9150509250925092565b600060208284031215611d7357611d726116b4565b5b6000611d8184828501611c95565b91505092915050565b600081905092915050565b6000611da18385611d8a565b9350611dae838584611785565b82840190509392505050565b6000611dc7828486611d95565b91508190509392505050565b600082825260208201905092915050565b7f746f6f206d616e79206f7574636f6d6520736c6f747300000000000000000000600082015250565b6000611e1a601683611dd3565b9150611e2582611de4565b602082019050919050565b60006020820190508181036000830152611e4981611e0d565b9050919050565b7f74686572652073686f756c64206265206d6f7265207468616e206f6e65206f7560008201527f74636f6d6520736c6f7400000000000000000000000000000000000000000000602082015250565b6000611eac602a83611dd3565b9150611eb782611e50565b604082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f636f6e646974696f6e20616c7265616479207072657061726564000000000000600082015250565b6000611f18601a83611dd3565b9150611f2382611ee2565b602082019050919050565b60006020820190508181036000830152611f4781611f0b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050611f8c8161180e565b92915050565b600060208284031215611fa857611fa76116b4565b5b6000611fb684828501611f7d565b91505092915050565b7f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000600082015250565b6000611ff5601a83611dd3565b915061200082611fbf565b602082019050919050565b6000602082019050818103600083015261202481611fe8565b9050919050565b60006060820190506120406000830186611680565b61204d6020830185611680565b61205a6040830184611896565b949350505050565b60008115159050919050565b61207781612062565b811461208257600080fd5b50565b6000815190506120948161206e565b92915050565b6000602082840312156120b0576120af6116b4565b5b60006120be84828501612085565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006120fd601583611dd3565b9150612108826120c7565b602082019050919050565b6000602082019050818103600083015261212c816120f0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061216d82611804565b915061217883611804565b92508282019050808211156121905761218f612133565b5b92915050565b60006121a182611804565b91506121ac83611804565b92508282026121ba81611804565b915082820484148315176121d1576121d0612133565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061221282611804565b915061221d83611804565b92508261222d5761222c6121d8565b5b828204905092915050565b7f4d75737420626520696e697469616c697a65642066726f6d2070726f78790000600082015250565b600061226e601e83611dd3565b915061227982612238565b602082019050919050565b6000602082019050818103600083015261229d81612261565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006122e76122e26122dd846122a4565b6122c2565b6122ae565b9050919050565b6122f7816122cc565b82525050565b600060208201905061231260008301846122ee565b92915050565b7f636f6e646974696f6e206e6f7420707265706172656400000000000000000000600082015250565b600061234e601683611dd3565b915061235982612318565b602082019050919050565b6000602082019050818103600083015261237d81612341565b9050919050565b600061238f82611804565b915061239a83611804565b92508282039050818111156123b2576123b1612133565b5b92915050565b60006040820190506123cd6000830185611680565b6123da6020830184611896565b9392505050565b7f466565207472616e73666572206661696c656400000000000000000000000000600082015250565b6000612417601383611dd3565b9150612422826123e1565b602082019050919050565b600060208201905081810360008301526124468161240a565b9050919050565b7f5769746864726177207472616e73666572206661696c65640000000000000000600082015250565b6000612483601883611dd3565b915061248e8261244d565b602082019050919050565b600060208201905081810360008301526124b281612476565b905091905056fea2646970667358221220855a0a7e6fff74778d3cd37628c806bb1d62fcde512a304bfcac946852f4e0da64736f6c63430008180033";

type PolyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Poly__factory extends ContractFactory {
  constructor(...args: PolyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Poly & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Poly__factory {
    return super.connect(runner) as Poly__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolyInterface {
    return new Interface(_abi) as PolyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Poly {
    return new Contract(address, _abi, runner) as unknown as Poly;
  }
}
